{"version":3,"sources":["assets/logo.svg","components/Header/index.jsx","pages/AboutUs/index.jsx","components/Button/index.jsx","components/Calendar/Week.jsx","components/Calendar/Days.jsx","components/Modal/index.jsx","redux/Calendar/types.js","components/Calendar/index.jsx","components/Main/index.jsx","pages/Homepage/index.jsx","App.js","serviceWorker.js","redux/Calendar/reducer.js","redux/rootReducer.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","to","activeClassName","onClick","menuToggle","document","querySelector","mobileNavContainer","classList","toggle","type","id","AboutUs","Button","filled","rest","props","classNames","defaultProps","undefined","week","moment","startOf","subtract","days","map","n","key","add","format","Week","mapDates","date","unix","Days","shownDate","picked","onPick","toggleModal","clone","dates","length","isSame","push","Modal","hideModal","children","calendarTypes","SELECT_DATE","MODAL_ACTIVITY","CHANGE_DATE","mapState","calendar","selectDate","selectedDate","DatePicker","useSelector","dispatch","useDispatch","showMonth","months","payload","configModal","pick","htmlFor","value","readOnly","Main","HomePage","App","path","component","exact","Boolean","window","location","hostname","match","initialState","calendarReducer","state","action","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.53649dab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b1a38376.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from '../../assets/logo.svg';\r\nimport './styles.scss';\r\n\r\nconst Header = () => {\r\n\r\n\r\n    const onClick = () => {\r\n        const menuToggle = document.querySelector('#menu-togle');\r\n        const mobileNavContainer = document.querySelector('#mobile-nav');\r\n        menuToggle.classList.toggle('menu-icon-active');\r\n        mobileNavContainer.classList.toggle('mobile-nav--active');\r\n    }\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header-overlay\">\r\n                <div className=\"nav-container\">\r\n\r\n                    <img className=\"logo\" src={logo} alt=\"logo\"/>\r\n\r\n                    <div className=\"nav-wrapper\">\r\n                        <ul className=\"nav\">\r\n                            <li className=\"nav__item\">\r\n                                <NavLink to=\"/\" className=\"nav__link\">\r\n                                    Home\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav__item aboutUs\">\r\n                                <NavLink to=\"/aboutUs\" className=\"nav__link\" activeClassName=\"nav__link_active\">\r\n                                    About Us\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <div onClick={onClick} type=\"button\" id=\"menu-togle\" className=\"menu-icon\">\r\n                            <div className=\"menu-icon-line\"/>\r\n                        </div>\r\n\r\n                        <div id=\"mobile-nav\" className=\"mobile-nav\">\r\n                            <ul className=\"mobile-nav__list\">\r\n                                <li className=\"mobile-nav__item\">\r\n                                    <NavLink to=\"/\" className=\"mobile-nav__link\">\r\n                                        Home\r\n                                    </NavLink></li>\r\n                                <li className=\"mobile-nav__item\">\r\n                                    <NavLink to=\"/aboutUs\" className=\"mobile-nav__link\">\r\n                                        About Us\r\n                                    </NavLink>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport \"./styles.scss\";\r\n\r\n\r\nconst AboutUs = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <section className=\"aboutus_section\">\r\n                <div className=\"container\">\r\n                    <h2 className=\"aboutus_title\">\r\n                        Lorem ipsum creation timelines\r\n                    </h2>\r\n                    <p className=\"aboutus_text\">\r\n                        So how did the classical Latin become so incoherent? According to\r\n                        McClintock, a 15th century typesetter likely scrambled part of\r\n                        Cicero's De Finibus in order to provide placeholder text to mockup\r\n                        various fonts for a type specimen book.\r\n                    </p>\r\n                    <p className=\"aboutus_text\">\r\n                        It's difficult to find examples of lorem ipsum in use before Letraset\r\n                        made it popular as a dummy text in the 1960s, although McClintock says\r\n                        he remembers coming across the lorem ipsum passage in a book of old\r\n                        metal type samples. So far he hasn't relocated where he once saw the\r\n                        passage, but the popularity of Cicero in the 15th century supports the\r\n                        theory that the filler text has been used for centuries.\r\n                    </p>\r\n                    <p className=\"aboutus_text\">\r\n                        And anyways, as Cecil Adams reasoned, “[Do you really] think graphic\r\n                        arts supply houses were hiring classics scholars in the 1960s?”\r\n                        Perhaps. But it seems reasonable to imagine that there was a version\r\n                        in use far before the age of Letraset.\r\n                    </p>\r\n                    <p className=\"aboutus_text\">\r\n                        McClintock wrote to Before &#38; After to explain his discovery; “What\r\n                        I find remarkable is that this text has been the industry's standard\r\n                        dummy text ever since some printer in the 1500s took a galley of type\r\n                        and scrambled it to make a type specimen book; it has survived not\r\n                        only four centuries of letter-by-letter resetting but even the leap\r\n                        into electronic typesetting, essentially unchanged except for an\r\n                        occasional 'ing' or 'y' thrown in. It's ironic that when the\r\n                        then-understood Latin was scrambled, it became as incomprehensible as\r\n                        Greek; the phrase 'it's Greek to me' and 'greeking' have common\r\n                        semantic roots!” (The editors published his letter in a correction\r\n                        headlined “Lorem Oopsum”).\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AboutUs;","import React from 'react';\nimport classNames from 'classnames';\nimport './style.scss';\n\nconst Button = ({type, filled, ...rest}) => {\n    const props = {\n        ...rest,\n        className: classNames('button', {\n            'button--filled': filled,\n        })\n    };\n\n    return <button {...props} type={type}/>;\n};\n\n\nButton.defaultProps = {\n    onClick: undefined,\n    type: 'button',\n    filled: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport moment from 'moment';\n\nconst week = moment().startOf('week').subtract(1, 'day');\nconst days = [1, 2, 3, 4, 5, 6, 7].map(n => <li key={n}>{week.add(1, 'day').format('dd')}</li>);\n\nconst Week = () => {\n\n    return (\n        <ul className=\"date-picker__week\">\n            {days}\n        </ul>\n    );\n};\n\nexport default Week;\n","import React from 'react';\nimport classNames from 'classnames';\n\n\nconst mapDates = ({date, className, onClick}) => (\n    <li key={date.unix()}>\n        <button className={className} onClick={onClick}>{date.format('DD')}</button>\n    </li>\n);\n\nconst Days = ({shownDate, picked, onPick, toggleModal}) => {\n\n    const days = shownDate\n        .clone()\n        .startOf('month')\n        .startOf('week');\n\n    const dates = [];\n\n    while (dates.length < 35) {\n\n        const date = days\n            .clone()\n            .add(dates.length, 'days');\n\n        const className = classNames('date-picker__day', {\n            'date-picker__day--out': !date.isSame(shownDate, 'month'),\n            'date-picker__day--picked': date.isSame(picked, 'day'),\n        });\n\n        const onClick = () => {\n            onPick(date);\n            toggleModal()\n        };\n\n        dates.push({date, className, onClick});\n    }\n\n    return (\n        <ul className=\"date-picker__days\">\n            {dates.map(mapDates)}\n        </ul>\n    );\n};\n\nexport default Days;\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\n\r\nconst Modal = ({hideModal, toggleModal, children}) => {\r\n    if (hideModal) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"modalOverlay\" onClick={() => toggleModal}/>\r\n            <div className=\"modal\">\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Modal;","const calendarTypes = {\r\n    SELECT_DATE: 'SELECT_DATE',\r\n    MODAL_ACTIVITY: 'MODAL_ACTIVITY',\r\n    CHANGE_DATE: 'CHANGE_DATE',\r\n}\r\n\r\nexport default calendarTypes;","import React from 'react';\r\nimport Button from '../Button';\r\nimport Week from './Week';\r\nimport Days from './Days';\r\nimport Modal from '../Modal';\r\nimport './style.scss';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport calendarTypes from '../../redux/Calendar/types';\r\n\r\n\r\nconst mapState = ({calendar}) => ({\r\n    shownDate: calendar.date,\r\n    hideModal: calendar.hideModal,\r\n    selectDate: calendar.selectedDate\r\n});\r\n\r\nconst DatePicker = () => {\r\n\r\n    const {shownDate, hideModal, selectDate} = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n\r\n    const showMonth = (months) => {\r\n        return {\r\n            type: calendarTypes.CHANGE_DATE,\r\n            payload: shownDate.clone().add(months, 'months'),\r\n        }\r\n    }\r\n\r\n    const pick = (selectDate) => {\r\n\r\n        return {\r\n            type: calendarTypes.SELECT_DATE,\r\n            payload: selectDate\r\n        }\r\n    }\r\n\r\n    const toggleModal = () => {\r\n        return {\r\n            type: calendarTypes.MODAL_ACTIVITY,\r\n            payload: !hideModal\r\n        }\r\n    }\r\n\r\n    const configModal = () => {\r\n        return {\r\n            hideModal: hideModal,\r\n            toggleModal: dispatch(toggleModal())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"date-picker\">\r\n            <ul className=\"date-picker__head\">\r\n                <li>\r\n                    <Button filled onClick={() => dispatch(showMonth(-1))}>‹</Button>\r\n                </li>\r\n                <li>\r\n                    <div className=\"date-picker__month\">{shownDate.format('MMMM YYYY')}</div>\r\n                </li>\r\n                <li>\r\n                    <Button filled onClick={() => dispatch(showMonth(1))}>›</Button>\r\n                </li>\r\n            </ul>\r\n            <hr/>\r\n            <Days shownDate={shownDate} picked={selectDate} onPick={selectDate => dispatch(pick(selectDate))}\r\n                  toggleModal={() => dispatch(toggleModal())}/>\r\n            <hr/>\r\n            <Week/>\r\n            <hr/>\r\n            {hideModal === true && (<Modal {...configModal}>\r\n                <div className=\"modalContainer\">\r\n                    <div className=\"d-flex\">\r\n                        <button\r\n                            className=\"hideModal\"\r\n                            onClick={() => dispatch(toggleModal())}>\r\n                            ×\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal_fields\">\r\n                        <div className=\"inputs\">\r\n                            <div>\r\n                                <label htmlFor=\"month\">Month</label>\r\n                            </div>\r\n                            <input\r\n                                id=\"month\"\r\n                                type=\"text\"\r\n                                value={selectDate.format('MMMM')}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <div>\r\n                                <label htmlFor=\"day\">Day</label>\r\n                            </div>\r\n                            <input\r\n                                id=\"day\"\r\n                                type=\"text\"\r\n                                value={selectDate.format('Do dddd')}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>)}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DatePicker;","import React from 'react';\r\nimport DatePicker from '../Calendar';\r\nimport './styles.scss';\r\n\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <div className=\"background\">\r\n                <div className=\"textbox\">\r\n                    <div className=\"title\">\r\n                        <h1>\r\n                            Choose the day <br/> for the meeting\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"text\">\r\n                        <h4>\r\n                            We encourage you to book your <br/>\r\n                            appointment online. <br/>\r\n                            This will save you time.\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"calendar\">\r\n                <DatePicker/>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport Header from '../../components/Header';\r\nimport Main from '../../components/Main';\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Main/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport AboutUs from './pages/AboutUs/index';\nimport HomePage from './pages/Homepage/index';\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route path=\"/\" component={HomePage} exact/>\n                <Route path=\"/aboutUs\" component={AboutUs}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import calendarTypes from \"./types\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst initialState = {\r\n    date: moment(),\r\n    hideModal: false,\r\n    selectedDate: moment(),\r\n}\r\n\r\n\r\nconst calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case calendarTypes.CHANGE_DATE:\r\n            return {...state, date: action.payload}\r\n        case calendarTypes.MODAL_ACTIVITY:\r\n            return {...state, hideModal: action.payload}\r\n        case calendarTypes.SELECT_DATE:\r\n            return {...state, selectedDate: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default calendarReducer;","import {combineReducers} from \"redux\";\r\nimport calendarReducer from \"./Calendar/reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    calendar: calendarReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore} from 'redux';\nimport rootReducer from './redux/rootReducer';\n\n\nconst store = createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}